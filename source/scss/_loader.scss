$color-1: rgb(104 182 249);
$color-2: rgb(33 244 223);
$color-3: rgb(34 254 177);
$dot-color: rgb(5, 170, 112);


.loader-wrapper {
    position: absolute;
    inset: 0;
    z-index: 10000;
    width: 100%;
    height: 100%;
    align-items: center;
    background: $color-1;
    background: linear-gradient(70deg,
            $color-1 1%,
            $color-2 22%,
            $color-3 51%,
            $color-2 83%,
            $color-1 100%);
    display: flex;
    justify-content: center;
}

$dot-count: 26;
$dot-size: 10px;
$dot-space: 15px;
$dot-start: calc((calc($dot-count / 2 + 1) * ($dot-size + $dot-space)) / 2);


$animation-time: 2s;
$animation-distance: 25px;

.loader {
    position: relative;

    .dot {
        animation-name: movement;
        animation-duration: $animation-time;
        animation-iteration-count: infinite;
        animation-timing-function: ease-in-out;
        height: $dot-size;
        position: absolute;
        top: -#{$dot-size};
        transform: translate3d(0, -#{$animation-distance}, 0) scale(1
    );
    width: $dot-size;

    @for $i from 1 through $dot-count {
        $dot-move: ceil(calc($i / 2));
        $dot-pos: $dot-start - (($dot-size + $dot-space) * $dot-move);

        $animation-delay: -#{$i * 0.1}s;

        @if $i % 2==0 {
            $animation-delay: -#{($i * 0.1) + calc($animation-time / 2)};
        }

        &:nth-of-type(#{$i}) {
            animation-delay: $animation-delay;
            left: $dot-pos;

            &::before {
                animation-delay: $animation-delay;
            }
        }
    }

    &::before {
        animation-name: size-opacity;
        animation-duration: $animation-time;
        animation-iteration-count: infinite;
        animation-timing-function: ease;
        background: white;
        border-radius: 50%;
        content: "";
        display: block;
        height: 100%;
        width: 100%;
    }

    &:nth-of-type(even)::before {
        background-color: $dot-color;
        box-shadow: inset 0 0 4px darken($dot-color, 10%);
    }
}
}

@keyframes movement {
    0% {
        transform: translate3d(0, -#{$animation-distance}, 0);
        z-index: 0;
    }

    50% {
        transform: translate3d(0, #{$animation-distance}, 0);
        z-index: 10;
    }

    100% {
        transform: translate3d(0, -#{$animation-distance}, 0);
        z-index: -5;
    }
}

@keyframes size-opacity {
    0% {
        opacity: 1;
        transform: scale(1);
    }

    25% {
        transform: scale(1.5);
    }

    50% {
        opacity: 1;
    }

    75% {
        opacity: 0.35;
        transform: scale(0.5);
    }

    100% {
        opacity: 1;
        transform: scale(1);
    }
}